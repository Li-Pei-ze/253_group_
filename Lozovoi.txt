// Example program
#include <iostream>
#include <vector>

struct Matrix
{
private:
    int n, m; // n -- число строк, m -- число столбцов 
    std::vector <std::vector<double>> a;

public:

Matrix()
{
    n = 0;
    m = 0;
}

Matrix(int n, int m)
{
    std::vector<std::vector<double>>b (n);
    for (int i = 0; i <= n - 1; ++i)
    {
        b[i].resize(m);
        for (int j = 0; j <= m - 1; ++j)
        {
            double k;
            std::cin >> k;
            b[i][j] = k;
        }
    }
    this->a = b;
    this->m = m;
    this->n = n;
}

void GetMatrix()
{
    for (int i = 0; i <= n - 1; ++i)
    {
        for (int j = 0; j <= m - 1; ++j)
        {
            std::cout << this->a[i][j] << " ";
        }
        std::cout << std::endl;
    }
}


Matrix operator*(const Matrix& b)
{
    if (this->m != b.n)
    {
        std::cout << "multiplication error";
        return *this;
    }
    
    
    else 
    
    {
        Matrix c;
    c.n = this->n;
    c.m = b.m;
    c.a.resize(n);
    for (int i = 0; i <= n - 1; ++i)
    {
        c.a[i].resize(b.m);
    }
        double q = 0;
        for (int i = 0; i <= this->n - 1; ++i)
        {
            for (int j = 0; j <= b.m - 1; ++j)
            {
                for (int k = 0; k <= this->m - 1; ++k)
                {
                    q += this->a[i][k] * b.a[k][j];
                }
                c.a[i][j] = q;
                q = 0;
            }
        }
        return c;
    }
} 

};

int main()
{
int m, n;
std::cin >> n >> m;
Matrix a(n, m);

std::cin >> n >> m;
Matrix b(n, m);

Matrix c;

c = a*b;

c.GetMatrix();
    
 return EXIT_SUCCESS;   
}